import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JTextArea;
import javax.swing.JButton;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

import javax.swing.JLabel;


public class Milestone2 extends JFrame {

	private JPanel contentPane;
	private static final int q0   = 0;
	private static final int q1   = 1;
	private static final int q2   = 2;
	private static final int q3   = 3;
	private static final int q4   = 4;
	private static final int q5   = 5;
	private static final int q6   = 6;
	private static final int q7   = 7;
	private static final int q8   = 8;
	private static final int q9   = 9;
	private static final int q10  = 10;
	private static final int q11  = 11;
	private static final int q12  = 12;
	private static final int q13  = 13;
	private static final int q14  = 14;
	private static final int q15  = 15;
	private static final int q16  = 16;
	private static final int q17  = 17;
	private static final int q18  = 18;
	private static final int q19  = 19;
	private static final int q20  = 20;
	private static final int q21  = 21;
	private static final int q22  = 22;
	private static final int q23  = 23;
	private static final int q24  = 24;
	private static final int q25  = 25;
	private static final int q26  = 26;
	private static final int q27  = 27;
	private static final int q28  = 28;
	private static final int q29  = 29;
	private static final int q30  = 30;
	private static final int q31  = 31;
	private static final int q32  = 32;
	private static final int q33  = 33;
	private static final int q34  = 34;
	private static final int q35  = 35;
	private static final int q37  = 37;
	
	private static int[][] delta =
			
		     /*q0   q1   q2   q3   q4   q5   q6   q7   q8   q9   q10  q11  q12  q13  q14  q15  q16  q17  q18  q19  q20  q21  q22  q23  q24  q25  q26  q27  q28  q29  q30  q31  q32  q33  q34  q35*/
/* a */			{{ q6,  q2,  q37, q37, q5,  q37, q37, q37, q15, q37, q10, q10, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q29, q37, q24, q24, q37, q37, q37, q37, q37, q37, q32, q32, q37, q37},
/* b */			 { q6,  q37, q37, q37, q5,  q37, q37, q37, q15, q37, q10, q10, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q29, q37, q24, q24, q37, q37, q37, q37, q37, q37, q32, q32, q37, q37},
/* c */			 { q6,  q37, q37, q37, q5,  q37, q37, q37, q15, q37, q10, q10, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q29, q37, q24, q24, q37, q37, q37, q37, q37, q37, q32, q32, q37, q37},			 
/* d */			 { q6,  q37, q37, q37, q5,  q37, q37, q37, q15, q37, q10, q10, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q29, q37, q24, q24, q37, q37, q37, q37, q37, q37, q32, q32, q37, q37},
/* e */			 { q6,  q37, q37, q37, q5,  q37, q37, q37, q15, q37, q10, q10, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q29, q37, q24, q24, q37, q37, q37, q37, q37, q37, q32, q32, q37, q37},
/* f */			 { q6,  q37, q37, q37, q5,  q37, q37, q37, q15, q37, q10, q10, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q29, q37, q24, q24, q37, q37, q37, q37, q37, q37, q32, q32, q37, q37},
/* g */			 { q6,  q37, q37, q37, q5,  q37, q37, q37, q15, q37, q10, q10, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q29, q37, q24, q24, q37, q37, q37, q37, q37, q37, q32, q32, q37, q37},
/* h */			 { q6,  q37, q37, q37, q5,  q37, q37, q37, q15, q37, q10, q10, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q29, q37, q24, q24, q37, q37, q37, q37, q37, q37, q32, q32, q37, q37},
/* i */			 { q6,  q37, q37, q37, q5,  q37, q37, q37, q15, q37, q10, q10, q37, q37, q37, q37, q37, q18, q37, q37, q37, q37, q29, q37, q24, q24, q37, q37, q37, q37, q37, q37, q32, q32, q37, q37},
/* j */			 { q6,  q37, q37, q37, q5,  q37, q37, q37, q15, q37, q10, q10, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q29, q37, q24, q24, q37, q37, q37, q37, q37, q37, q32, q32, q37, q37}, 
/* k */			 { q6,  q37, q37, q37, q5,  q37, q37, q37, q15, q37, q10, q10, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q29, q37, q24, q24, q37, q37, q37, q37, q37, q37, q32, q32, q37, q37},
/* l */			 { q6,  q37, q37, q37, q5,  q37, q37, q37, q15, q37, q10, q10, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q29, q37, q24, q24, q37, q37, q37, q37, q37, q37, q32, q32, q37, q37},
/* m */			 { q6,  q37, q37, q37, q5,  q37, q37, q37, q15, q37, q10, q10, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q29, q37, q24, q24, q37, q37, q37, q37, q37, q37, q32, q32, q37, q37},
/* n */ 		 { q6,  q37, q37, q37, q5,  q37, q37, q37, q15, q37, q10, q10, q37, q37, q37, q37, q37, q37, q19, q37, q37, q37, q29, q37, q24, q24, q37, q37, q37, q37, q37, q37, q32, q32, q37, q37},
/* o */			 { q6,  q37, q37, q37, q5,  q37, q37, q37, q15, q37, q10, q10, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q29, q37, q24, q24, q37, q37, q37, q37, q37, q37, q32, q32, q37, q37},
/* p */			 { q16, q37, q37, q37, q5,  q37, q37, q37, q15, q37, q10, q10, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q29, q37, q24, q24, q37, q37, q37, q37, q37, q37, q32, q32, q37, q37},
/* q */			 { q6,  q37, q37, q37, q5,  q37, q37, q37, q15, q37, q10, q10, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q29, q37, q24, q24, q37, q37, q37, q37, q37, q37, q32, q32, q37, q37},
/* r */			 { q6,  q37, q37, q37, q5,  q37, q37, q37, q15, q37, q10, q10, q37, q37, q37, q37, q17, q37, q37, q37, q37, q37, q29, q37, q24, q24, q37, q37, q37, q37, q37, q37, q32, q32, q37, q37},
/* s */			 { q6,  q37, q37, q37, q5,  q37, q37, q37, q15, q37, q10, q10, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q29, q37, q24, q24, q37, q37, q37, q37, q37, q37, q32, q32, q37, q37},
/* t */			 { q6,  q37, q37, q37, q5,  q37, q37, q37, q15, q37, q10, q10, q37, q37, q37, q37, q37, q37, q37, q20, q37, q37, q29, q37, q24, q24, q37, q37, q37, q37, q37, q37, q32, q32, q37, q37},
/* u */			 { q6,  q37, q37, q37, q5,  q37, q37, q37, q15, q37, q10, q10, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q29, q37, q24, q24, q37, q37, q37, q37, q37, q37, q32, q32, q37, q37},
/* v */			 { q1,  q37, q37, q37, q5,  q37, q37, q37, q15, q37, q10, q10, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q29, q37, q24, q24, q37, q37, q37, q37, q37, q37, q32, q32, q37, q37},
/* w */			 { q6,  q37, q37, q37, q5,  q37, q37, q37, q15, q37, q10, q10, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q29, q37, q24, q24, q37, q37, q37, q37, q37, q37, q32, q32, q37, q37},
/* x */			 { q6,  q37, q37, q37, q5,  q37, q37, q37, q15, q37, q10, q10, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q29, q37, q24, q24, q37, q37, q37, q37, q37, q37, q32, q32, q37, q37},
/* y */			 { q6,  q37, q37, q37, q5,  q37, q37, q37, q15, q37, q10, q10, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q29, q37, q24, q24, q37, q37, q37, q37, q37, q37, q32, q32, q37, q37},
/* z */			 { q6,  q37, q37, q37, q5,  q37, q37, q37, q15, q37, q10, q10, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q29, q37, q24, q24, q37, q37, q37, q37, q37, q37, q32, q32, q37, q37},
/* 0 */		 	 { q37, q37, q37, q37, q37, q37, q37, q37, q13, q37, q37, q37, q37, q13, q37, q37, q37, q37, q37, q37, q37, q37, q27, q37, q37, q37, q37, q27, q37, q37, q37, q37, q37, q37, q37, q37},
/* 1 */		 	 { q37, q37, q37, q37, q37, q37, q37, q37, q13, q37, q37, q37, q37, q13, q37, q37, q37, q37, q37, q37, q37, q37, q27, q37, q37, q37, q37, q27, q37, q37, q37, q37, q37, q37, q37, q37},
/* 2 */		 	 { q37, q37, q37, q37, q37, q37, q37, q37, q13, q37, q37, q37, q37, q13, q37, q37, q37, q37, q37, q37, q37, q37, q27, q37, q37, q37, q37, q27, q37, q37, q37, q37, q37, q37, q37, q37},
/* 3 */		 	 { q37, q37, q37, q37, q37, q37, q37, q37, q13, q37, q37, q37, q37, q13, q37, q37, q37, q37, q37, q37, q37, q37, q27, q37, q37, q37, q37, q27, q37, q37, q37, q37, q37, q37, q37, q37},
/* 4 */		 	 { q37, q37, q37, q37, q37, q37, q37, q37, q13, q37, q37, q37, q37, q13, q37, q37, q37, q37, q37, q37, q37, q37, q27, q37, q37, q37, q37, q27, q37, q37, q37, q37, q37, q37, q37, q37},
/* 5 */		 	 { q37, q37, q37, q37, q37, q37, q37, q37, q13, q37, q37, q37, q37, q13, q37, q37, q37, q37, q37, q37, q37, q37, q27, q37, q37, q37, q37, q27, q37, q37, q37, q37, q37, q37, q37, q37},
/* 6 */		 	 { q37, q37, q37, q37, q37, q37, q37, q37, q13, q37, q37, q37, q37, q13, q37, q37, q37, q37, q37, q37, q37, q37, q27, q37, q37, q37, q37, q27, q37, q37, q37, q37, q37, q37, q37, q37},
/* 7 */		 	 { q37, q37, q37, q37, q37, q37, q37, q37, q13, q37, q37, q37, q37, q13, q37, q37, q37, q37, q37, q37, q37, q37, q27, q37, q37, q37, q37, q27, q37, q37, q37, q37, q37, q37, q37, q37},
/* 8 */		 	 { q37, q37, q37, q37, q37, q37, q37, q37, q13, q37, q37, q37, q37, q13, q37, q37, q37, q37, q37, q37, q37, q37, q27, q37, q37, q37, q37, q27, q37, q37, q37, q37, q37, q37, q37, q37},
/* 9 */		 	 { q37, q37, q37, q37, q37, q37, q37, q37, q13, q37, q37, q37, q37, q13, q37, q37, q37, q37, q37, q37, q37, q37, q27, q37, q37, q37, q37, q27, q37, q37, q37, q37, q37, q37, q37, q37},
/*_ (space)*/	 { q37, q37, q37, q4,  q37, q0,  q37, q8,  q37, q10, q11, q11, q0,  q0,  q8,  q0,  q37, q37, q37, q37, q21, q37, q37, q24, q25, q25, q37, q37, q22, q0,  q37, q32, q33, q33, q37, q0 },
/* - */			 { q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q31, q37, q37, q34, q37, q37},
/* + */			 { q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q14, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q28, q37, q37, q37, q37, q37, q37, q37, q37},
/* = */			 { q37, q7,  q37, q37, q37, q37, q7,  q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37},
/* * */			 { q31, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q35, q37},
/* " */			 { q37, q37, q37, q37, q37, q37, q37, q37, q9,  q37, q37, q12, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q23, q37, q37, q26, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37},
/* ( */			 { q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q22, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37},
/* ) */			 { q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q37, q29, q29, q29, q37, q37, q37, q37, q37, q37, q37}};

	int state = q0;	
	

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Milestone2 frame = new Milestone2();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}		
		/**
		 * 
		 * @return true if the end state is an accepting state
		 */
		public int isCorrect() {
		  return state;
		}
	/**
	 * Create the frame.
	 */
	public Milestone2() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		final JTextArea textArea = new JTextArea();
		textArea.setBounds(10, 36, 273, 180);
		contentPane.add(textArea);
		
		JLabel lblStatus = new JLabel("Status:");
		lblStatus.setBounds(293, 16, 46, 14);
		contentPane.add(lblStatus);
		
		final JLabel statusLabel = new JLabel("");
		statusLabel.setBounds(293, 41, 120, 14);
		contentPane.add(statusLabel);
		
		JButton btnRun = new JButton("Run");
		btnRun.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				String input = textArea.getText();
				for (int i = 0; i < input.length(); i++){
				    char c = input.charAt(i);
				    try{
				      state = delta[c-'a'][state]; //fix me
				      System.out.println("State: " + state);
				      System.out.println(c-'a');
				    }
				    catch (ArrayIndexOutOfBoundsException ex) {
				      statusLabel.setText("Rejected!");
				      statusLabel.setForeground(Color.RED);
				      textArea.setForeground(Color.RED);
				    }
				  }
				  /**
				   * accepting states: 5, 12, 13, 15, 27, 29, 35
				   */
				  switch (state){
				  case 1: state = q5;
				  			System.out.println(state);
				  		  break;
				  case 2: state = q12;
				  			System.out.println(state);
				  		  break;
				  case 3: state = q13;
				  			System.out.println(state);
				  		  break;
				  case 4: state = q15;
				  			System.out.println(state);
				  		  break;
				  case 5: state = q27;
				  			System.out.println(state);
				  		  break;
				  case 6: state = q29;
				  			System.out.println(state);
				  		  break;
				  case 7: state = q35;
				  			System.out.println(state);
				  		  break;
				  }
			}
		});
		btnRun.setBounds(10, 227, 89, 23);
		contentPane.add(btnRun);
		
		JLabel lblTextParser = new JLabel("Text parser!");
		lblTextParser.setBounds(97, 11, 78, 14);
		contentPane.add(lblTextParser);
		
		JButton btnReset = new JButton("Reset");
		btnReset.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				state = q0;
				statusLabel.setText("");
				statusLabel.setForeground(Color.BLACK);
				textArea.setForeground(Color.BLACK);
			}
		});
		btnReset.setBounds(194, 227, 89, 23);
		contentPane.add(btnReset);
		
	}
}
